---

- name: fetch latest terragrunt version
  uri:
    url: "{{ terragrunt_url }}/latest"
    follow_redirects: no
  register: terragrunt_latest_version
  when: terragrunt_version == "latest"
  failed_when: terragrunt_latest_version.status >= 400 # redirections cause failure otherwise

- name: Check terragrunt version
  command: "terragrunt --version"
  failed_when: false
  changed_when: false
  register: terragrunt_old_version

- name: consolidate values
  set_fact:
    terragrunt_old_version: '{{ terragrunt_old_version.rc | ternary("", (terragrunt_old_version.stdout | default("x")).split()[-1]) }}'
    terragrunt_version: '{{ (terragrunt_version != "latest") | ternary(terragrunt_version, (terragrunt_latest_version.location | default("") | urlsplit("path")).split("/")[0][1:]) }}'

- name: Download and install terragrunt for {{ ansible_system }} on {{ ansible_architecture }}
  uri:
    url: "{{ terragrunt_url }}/download/v{{ terragrunt_version }}/terragrunt_{{ ansible_system|lower }}_{{ terragrunt_supported_architectures[ansible_architecture] }}"
    dest: "{{ terragrunt_dir }}"
  when: (ansible_architecture in terragrunt_supported_architectures) and (terragrunt_old_version != terragrunt_version)

...
